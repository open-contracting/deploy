# vi: ft=apache

{# The paths should be in decreasing order of specificity to generate the correct order of precedence. #}
{%
    set options = {
        '/profiles/eu': {
            'versions': ['master'],
            'languages': ['en'],
            'redirect_excludes': ['schema', 'extension'],
        },
        '/profiles/gpa': {
            'versions': ['master'],
            'languages': ['en'],
            'redirect_excludes': ['schema', 'extension'],
        },
        '/profiles/ppp': {
            'versions': ['latest', '1.0'],
            'languages': ['en', 'es'],
            'redirect_excludes': ['schema', 'extension'],
        },
        '/infrastructure': {
            'versions': ['latest', '0.9'],
            'languages': ['en'],
            'redirect_excludes': ['schema'],
            'cove_backend': oc4ids_cove_backend,
        },
        '': {
            'versions': ['latest', '1.1', '1.0'],
            'languages': ['en', 'es', 'fr', 'it'],
            'redirect_excludes': ['staging', 'schema', 'profiles', 'legacy', 'favicon.ico', 'robots.txt'],
            'cove_backend': ocds_cove_backend,
            'stable_sitemap': [['latest', '1.1', '1.0']],
        },
    }
%}

{# Matches all root paths. #}
{% set pattern = '(profiles/[^/]+/|infrastructure/)?' %}

{% set documentroot = '/home/ocds-docs/web' %}

{% if testing %}
    {# Add any configuration specific to the testing virtual host here. #}

    {# We want to disallow all in testing only. #}
    Alias /robots.txt "/var/www/html/robots.txt"
    <Location /robots.txt>
        Order allow,deny
        Allow from all
    </Location>
{% else %}
    {# Add any configuration specific to the live virtual host here. #}
{% endif %}

DocumentRoot {{ documentroot }}
RewriteMap unescape int:unescape

SetEnv BANNER /includes/banner_live.html
<Location /1.0/>
    SetEnv BANNER /includes/banner_old.html
</Location>

# Staging banners.
<Location /staging/>
    SetEnv BANNER /includes/banner_staging.html
</Location>
<Location /staging/infrastructure/>
    SetEnv BANNER /includes/banner_staging_infrastructure.html
</Location>
<Location /staging/profiles/>
    SetEnv BANNER /includes/banner_staging_profiles.html
</Location>
<Location /staging/profiles/eu/>
    SetEnv BANNER /includes/banner_staging_profiles_eu.html
</Location>
<Location /staging/profiles/gpa/>
    SetEnv BANNER /includes/banner_staging_profiles_gpa.html
</Location>
<Location /staging/profiles/ppp/>
    SetEnv BANNER /includes/banner_staging_profiles_ppp.html
</Location>

# Needed to proxy to SSL servers.
SSLProxyEngine on
# ProxyPreserveHost was on but we need it to be Off, as it makes adding SSL much easier.
ProxyPreserveHost Off
# With a keepalive, we had problems with headers being interpreted as the start of the response.
SetEnv proxy-nokeepalive 1

# Remember: The Directory directive applies only to static files, not to proxied or redirected paths.
<Directory {{ documentroot }}>
    Require all granted
    Options Indexes FollowSymLinks IncludesNOEXEC
    AddOutputFilter INCLUDES .html

    # Serve JSON with UTF-8 charset.
    # https://bugs.chromium.org/p/chromium/issues/detail?id=438464
    # https://bugs.webkit.org/show_bug.cgi?id=197369
    AddType "application/json; charset=utf-8" .json

    Header set Access-Control-Allow-Origin "*"

    {% for root, opts in options.items() %}
        # Add an "en" language if not present, to avoid serving a directory listing.
        # Putting this in a Directory directive rather than a Location directive avoids having to exclude /review, etc.
        RedirectMatch ^{{ root }}/{% for exclude in opts.redirect_excludes %}(?!{{ exclude }}){% endfor %}([^/]+)/?$ {{ root }}/$1/en/
    {% endfor %}
</Directory>

{% for root, opts in options.items() %}
    # Add the default version if not present.
    <Location {{ root or '/' }}>
        RedirectMatch ^{{ root }}/?$ {{ root }}/{{ opts.versions[0] }}/
    </Location>

    # Below, we match QUERY_STRING and HTTP_REFERER in the same RewriteCond for backreferences to work.

    # Implement the version switcher.
    <Location {{ root }}/switcher>
        RewriteEngine on

        {% for versions in opts.get('stable_sitemap', [None]) %}
            {% if versions %}
                # Test that we are switching between versions with the same sitemap or with appropriate redirects.
                RewriteCond "%{HTTP_REFERER}" "^https://([^/]*){{ root }}/({{ versions|join('|') }})/"
                RewriteCond "%{QUERY_STRING}" "^branch=({{ versions|join('|') }})$"
            {% endif %}
            # Use the HTTP referer to return to the same page in the new version.
            RewriteCond "%{HTTP_REFERER}:::%{QUERY_STRING}" "^https://([^/]*){{ root }}/([^/]*)/([^/]*)/(.*):::branch=(.*)$"
            # The backreferences are the version (branch), language and path.
            RewriteRule ^.*$ {{ root }}/${unescape:%5}/%3/%4? [R]
        {% endfor %}

        # If there is no HTTP referer, or if the branch is legacy or otherwise unknown, go to the version's homepage.
        RewriteCond "%{QUERY_STRING}" "^branch=(.*)$"
        # The backreference is the version (branch).
        RewriteRule ^.*$ {{ root }}/${unescape:%1}/? [R]
    </Location>

    # Implement the language switcher.
    {% for version in opts.versions %}
        <Location {{ root }}/{{ version }}/switcher>
            RewriteEngine on

            # Use the HTTP referer to return to the same page in the new language.
            RewriteCond "%{HTTP_REFERER}:::%{QUERY_STRING}" "^https://([^/]*){{ root }}/([^/]*)/([^/]*)/(.*):::lang=(.*)$"
            # The backreferences are the version, language and path.
            RewriteRule ^.*$ {{ root }}/%2/${unescape:%5}/%4? [R]

            # If there is no HTTP referer, or if the language is unknown, go to the version's homepage.
            RewriteCond "%{QUERY_STRING}" "^lang=(.*)$"
            # The backreference is the language.
            RewriteRule ^.*$ {{ root }}/{{ version }}/${unescape:%1}/? [R]
        </Location>

        # Configure the error page.
        {% for lang in opts.languages %}
            <Location {{ root }}/{{ version }}/{{ lang }}/>
                ErrorDocument 404 {{ root }}/{{ version }}/{{ lang }}/404/
            </Location>

            <Location {{ root }}/{{ version }}/{{ lang }}/404/>
                SetOutputFilter SUBSTITUTE
                # This also substitutes URLs for stylesheets, scripts, etc.
                Substitute "s|\"\.\./|\"{{ root }}/{{ version }}/{{ lang }}/|i"
            </Location>
        {% endfor %}
    {% endfor %}

    {% if 'cove_backend' in opts %}
        # Proxy to the Data Review Tool, if configured. /media contains user-submitted content.
        ProxyPass {{ root }}/review {{ opts.cove_backend }}{{ root }}/review timeout={{ timeout }}
        ProxyPass {{ root }}/static {{ opts.cove_backend }}{{ root }}/static
        ProxyPass {{ root }}/media  {{ opts.cove_backend }}{{ root }}/media
    {% endif %}
{% endfor %}

####################
# Redirects
####################

# Redirect pages from the old standard.open-contracting.org to www.open-contracting.org.
Redirect /blog https://www.open-contracting.org/latest-news/
Redirect /feed https://www.open-contracting.org/feed/

# Redirect blog posts from the old standard.open-contracting.org to www.open-contracting.org.
Redirect /announcing-the-ocds-help-desk https://www.open-contracting.org/2015/03/20/announcing-the-ocds-help-desk
Redirect /beta https://www.open-contracting.org/2014/09/04/beta
Redirect /community-web-meeting-exploring-civil-society-contract-monitoring-for-open-contracting-data https://www.open-contracting.org/2014/05/31/community-web-meeting-exploring-civil-society-contract-monitoring-for-open-contracting-data
Redirect /community-web-meeting-media-use-cases-for-open-contracting-data https://www.open-contracting.org/2014/05/17/community-web-meeting-media-use-cases-for-open-contracting-data
Redirect /comparing-contract-data-understanding-supply https://www.open-contracting.org/2014/04/30/comparing-contract-data-understanding-supply
Redirect /contracting-data-comparison-modelling-contracts https://www.open-contracting.org/2014/06/10/contracting-data-comparison-modelling-contracts
Redirect /contracting-data-comparison-updates https://www.open-contracting.org/2014/05/09/contracting-data-comparison-updates
Redirect /data-standard-introduction-workshop-in-washington-dc-may-8th-2015 https://www.open-contracting.org/2015/04/14/data-standard-introduction-workshop-in-washington-dc-may-8th-2015
Redirect /field-notes-transforming-canadian-procurement-data-to-ocds-format https://www.open-contracting.org/2014/09/25/field-notes-transforming-canadian-procurement-data-to-ocds-format
Redirect /first-release https://www.open-contracting.org/2014/06/27/first-release
Redirect /intoduction-to-ocds-workshop-international-open-data-conference-ottawa-may-27th-2015 https://www.open-contracting.org/2015/04/12/intoduction-to-ocds-workshop-international-open-data-conference-ottawa-may-27th-2015
Redirect /montreal-python-conference-pycon-sprint-what-we-discussed https://www.open-contracting.org/2014/04/19/montreal-python-conference-pycon-sprint-what-we-discussed
Redirect /montreal-python-conference-pycon-sprint-what-we-worked-on https://www.open-contracting.org/2014/04/20/montreal-python-conference-pycon-sprint-what-we-worked-on
Redirect /okfest-2014 https://www.open-contracting.org/2014/07/24/okfest-2014
Redirect /open-contracting-data-standard-at-the-open-government-partnership https://www.open-contracting.org/2015/10/21/open-contracting-data-standard-at-the-open-government-partnership
Redirect /open-contracting-data-standard-introductory-training https://www.open-contracting.org/2015/07/03/open-contracting-data-standard-introductory-training
Redirect /open-data-comparison-beta https://www.open-contracting.org/2014/03/04/open-data-comparison-beta
Redirect /release-of-data-standard https://www.open-contracting.org/2014/11/18/release-of-data-standard
Redirect /request-for-comments-extending-ocds-for-extractives-industries-and-land https://www.open-contracting.org/2014/12/18/request-for-comments-extending-ocds-for-extractives-industries-and-land
Redirect /sprinting-at-europython-2014 https://www.open-contracting.org/2014/07/31/sprinting-at-europython-2014
Redirect /upgrading-ocds-governance-process-consultation-deadline-january-5th-2016 https://www.open-contracting.org/2015/12/02/upgrading-ocds-governance-process-consultation-deadline-january-5th-2016

# Redirect pages from the old standard.open-contracting.org to the OCDS documentation.
Redirect /project /latest/en/
Redirect /proyecto /latest/en/
Redirect /getinvolved /latest/en/support/
Redirect /participa /latest/en/support/
Redirect /progress /latest/en/support/history_and_development/
Redirect /recursos /latest/en/support/tools/
Redirect /resources /latest/en/support/tools/

# The Validator was renamed the Data Review Tool.
Redirect /validator /review
RedirectMatch ^/validator/(.*)$ /review/$1

# See: https://crm.open-contracting.org/issues/4401
{% for lang in options[''].languages %}
    {% for version in ['latest', '1.1'] %}
        # Extensions
        Redirect /{{ version }}/{{ lang }}/extensions/community/              https://extensions.open-contracting.org/{{ lang }}/extensions/
        Redirect /{{ version }}/{{ lang }}/extensions/developing/             https://extensions.open-contracting.org/{{ lang }}/extensions/
        Redirect /{{ version }}/{{ lang }}/extensions/party_details/          https://extensions.open-contracting.org/{{ lang }}/extensions/
        Redirect /{{ version }}/{{ lang }}/extensions/bids/                   https://extensions.open-contracting.org/{{ lang }}/extensions/bids/
        Redirect /{{ version }}/{{ lang }}/extensions/enquiries/              https://extensions.open-contracting.org/{{ lang }}/extensions/enquiries/
        Redirect /{{ version }}/{{ lang }}/extensions/location/               https://extensions.open-contracting.org/{{ lang }}/extensions/location/
        Redirect /{{ version }}/{{ lang }}/extensions/lots/                   https://extensions.open-contracting.org/{{ lang }}/extensions/lots/
        Redirect /{{ version }}/{{ lang }}/extensions/milestone_documents/    https://extensions.open-contracting.org/{{ lang }}/extensions/milestone_documents/
        Redirect /{{ version }}/{{ lang }}/extensions/participation_fee/      https://extensions.open-contracting.org/{{ lang }}/extensions/participation_fee/
        Redirect /{{ version }}/{{ lang }}/extensions/process_title/          https://extensions.open-contracting.org/{{ lang }}/extensions/process_title/

        # Iterative improvements from OCDS 1.1.4 and up
        Redirect /{{ version }}/{{ lang }}/extensions/                        /{{ version }}/{{ lang }}/guidance/map/extensions/
        Redirect /{{ version }}/{{ lang }}/implementation/amendments/         /{{ version }}/{{ lang }}/guidance/map/amendments/
        Redirect /{{ version }}/{{ lang }}/implementation/hosting/            /{{ version }}/{{ lang }}/guidance/build/hosting/
        Redirect /{{ version }}/{{ lang }}/implementation/levels/             /{{ version }}/{{ lang }}/getting_started/quality/
        Redirect /{{ version }}/{{ lang }}/implementation/licensing/          /{{ version }}/{{ lang }}/guidance/publish/#license-your-data
        Redirect /{{ version }}/{{ lang }}/implementation/publication_policy/ /{{ version }}/{{ lang }}/guidance/publish/#finalize-your-publication-policy
        Redirect /{{ version }}/{{ lang }}/implementation/registration/       /{{ version }}/{{ lang }}/guidance/build/#register-an-ocid-prefix
        Redirect /{{ version }}/{{ lang }}/implementation/related_processes/  /{{ version }}/{{ lang }}/guidance/map/related_processes/
        Redirect /{{ version }}/{{ lang }}/implementation/serialization/      /{{ version }}/{{ lang }}/guidance/build/serialization/
        Redirect /{{ version }}/{{ lang }}/implementation/                    /{{ version }}/{{ lang }}/guidance/
        Redirect /{{ version }}/{{ lang }}/schema/changelog/                  /{{ version }}/{{ lang }}/history/changelog/
        Redirect /{{ version }}/{{ lang }}/schema/deprecation/                /{{ version }}/{{ lang }}/governance/deprecation/
        Redirect /{{ version }}/{{ lang }}/support/credits/                   /{{ version }}/{{ lang }}/history/history_and_development/#appreciation
        Redirect /{{ version }}/{{ lang }}/support/governance/                /{{ version }}/{{ lang }}/governance/
        Redirect /{{ version }}/{{ lang }}/support/history_and_development/   /{{ version }}/{{ lang }}/history/history_and_development/
        Redirect /{{ version }}/{{ lang }}/support/tools/                     /{{ version }}/{{ lang }}/support/#ocds-tools
    {% endfor %}
{% endfor %}

{% for lang in options['/profiles/ppp'].languages %}
    {% for version in ['latest', '1.0'] %}
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/bids/                    https://extensions.open-contracting.org/{{ lang }}/extensions/bids/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/budget/                  https://extensions.open-contracting.org/{{ lang }}/extensions/budget/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/budget_project/          https://extensions.open-contracting.org/{{ lang }}/extensions/budget_project/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/charges/                 https://extensions.open-contracting.org/{{ lang }}/extensions/charges/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/documentation_details/   https://extensions.open-contracting.org/{{ lang }}/extensions/documentation_details/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/finance/                 https://extensions.open-contracting.org/{{ lang }}/extensions/finance/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/index/                   https://extensions.open-contracting.org/{{ lang }}/extensions/index/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/location/                https://extensions.open-contracting.org/{{ lang }}/extensions/location/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/metrics/                 https://extensions.open-contracting.org/{{ lang }}/extensions/metrics/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/milestone_documents/     https://extensions.open-contracting.org/{{ lang }}/extensions/milestone_documents/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/performance_failures/    https://extensions.open-contracting.org/{{ lang }}/extensions/performance_failures/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/ppp/                     https://extensions.open-contracting.org/{{ lang }}/extensions/ppp/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/process_title/           https://extensions.open-contracting.org/{{ lang }}/extensions/process_title/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/qualification/           https://extensions.open-contracting.org/{{ lang }}/extensions/qualification/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/requirements/            https://extensions.open-contracting.org/{{ lang }}/extensions/requirements/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/risk_allocation/         https://extensions.open-contracting.org/{{ lang }}/extensions/risk_allocation/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/shareholders/            https://extensions.open-contracting.org/{{ lang }}/extensions/shareholders/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/signatories/             https://extensions.open-contracting.org/{{ lang }}/extensions/signatories/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/tariffs/                 https://extensions.open-contracting.org/{{ lang }}/extensions/tariffs/
        Redirect /profiles/ppp/{{ version }}/{{ lang }}/extensions/transaction_milestones/  https://extensions.open-contracting.org/{{ lang }}/extensions/transaction_milestones/
    {% endfor %}
{% endfor %}

####################
# Staging
####################

<Directory {{ documentroot }}/staging>
    ErrorDocument 404 /staging/error/404

    {% for root, opts in options.items() %}
        # Add an "en" language if not present, to avoid serving a directory listing.
        # This should be nearly identical to the RedirectMatch directive within the Directory directive above.
        RedirectMatch ^/staging{{ root }}/{% for exclude in opts.redirect_excludes %}(?!{{ exclude }}){% endfor %}(?!switcher)([^/]+)/?$ /staging{{ root }}/$1/en/
    {% endfor %}
</Directory>

# We can't set 404 pages like for production directories, so we use a RewriteRule directive.
# Note: Using REQUEST_URI instead of THE_REQUEST breaks behavior.
<Location /staging/error/404>
    RewriteEngine on
    RewriteCond "%{THE_REQUEST}" "^GET /staging/{{ pattern }}([^/]*/[^/]*)/"
    # The backreferences are the root, and version and language.
    RewriteRule ^.*$ /staging/%1%2/404/ [L]
</Location>

# We can't backreference a LocationMatch regular expression, so we need this intermediate step.
# Note: Using ^ or $ anchors breaks behavior.
<LocationMatch "/staging/{{ pattern }}[^/]*/[^/]*/404/">
    SetOutputFilter SUBSTITUTE
    # This also substitutes URLs for stylesheets, scripts, etc.
    Substitute "s|\"\.\./|\"error_redirect/|i"
</LocationMatch>

# This also handles requests for stylesheets, scripts, etc.
<LocationMatch "^/staging/{{ pattern }}[^/]*/[^/]*/(.*/)?error_redirect/.*$">
    RewriteEngine on
    RewriteCond "%{REQUEST_URI}" "^/staging/{{ pattern }}([^/]*/[^/]*)/(.*/)?error_redirect/(.*)"
    # The backreferences are the root, version and language, and path.
    RewriteRule ^.*$ https://standard.open-contracting.org/staging/%1%2/%4 [R]
</LocationMatch>

# Implement the language switcher.
<LocationMatch "^/staging/{{ pattern }}[^/]*/switcher/?$">
    RewriteEngine on

    # Use the HTTP referer to return to the same page in the new language.
    RewriteCond "%{HTTP_REFERER}:::%{QUERY_STRING}" "^https://([^/]*)/staging/{{ pattern }}([^/]*)/([^/]*)/(.*):::lang=(.*)$"
    # The backreferences are the root, version, language and path.
    RewriteRule ^.*$ https://standard.open-contracting.org/staging/%2%3/${unescape:%6}/%5? [R]

    # If there is no HTTP referer, or if the language is unknown, go to the version's homepage.
    RewriteCond "%{QUERY_STRING}" "^lang=(.*)$"
    # The backreferences are the root, version and language.
    RewriteRule ^{{ documentroot }}/staging/{{ pattern }}([^/]*) https://standard.open-contracting.org/staging/$1$2/${unescape:%1}/? [R]
</LocationMatch>
