# TYPE	DATABASE	USER		ADDRESS			METHOD
# https://www.postgresql.org/docs/current/auth-pg-hba-conf.html

# Local connections by postgres user. (Belts-and-suspenders approach.)
local	all		postgres				peer
# Local connections for physical replication.
local	replication	all					peer
host	replication	all		127.0.0.1/32		md5
host	replication	all		::1/128			md5
# Local connections.
local	all		all					peer
host	all		all		127.0.0.1/32		md5
host	all		all		::1/128			md5

{%- if pillar.postgres.get('public_access') %}
# Remote connections with SSL encryption.
hostssl	all		all		0.0.0.0/0		md5
hostssl	all		all		::/0			md5
{%- endif %}

{%- if 'replica_ipv4' in pillar.postgres %}
# Allow SSL connections from replicas (IPv4).
  {%- for ip in pillar.postgres.replica_ipv4 %}
hostssl	replication	replica		{{ "{:18}".format(ip + "/32") }}	md5
  {%- endfor %}
{%- endif %}
{%- if 'replica_ipv6' in pillar.postgres %}
# Allow SSL connections from replicas (IPv6).
  {%- for ip in pillar.postgres.replica_ipv6 %}
hostssl	replication	replica		{{ "{:42}".format(ip + "/128") }}	md5
  {%- endfor %}
{%- endif %}

{%- if salt['pillar.get']('maintenance:enabled') %}
# Appbeat monitoring
  {%- for ip in salt.cmd.run('curl -sS https://www.appbeat.io/probes/ipv4').split() %}
hostssl	nodatabase	nouser		{{ "{:18}".format(ip + "/32") }}	md5
  {%- endfor %}

  {%- for ip in salt.cmd.run('curl -sS https://www.appbeat.io/probes/ipv6').split() %}
hostssl	nodatabase	nouser		{{ "{:42}".format(ip + "/128") }}	md5
  {%- endfor %}
{%- endif %}
